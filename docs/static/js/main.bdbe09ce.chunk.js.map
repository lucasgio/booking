{"version":3,"sources":["api/getCitysApi.tsx","components/UseContext.tsx","hooks/useFromSubmittion.tsx","components/FormApp.tsx","hooks/useGetSuggestion.tsx","components/PanelApp.tsx","components/BookingApp.tsx","index.tsx"],"names":["getCitysApi","axios","create","baseURL","getResultFlights","FlightsContext","createContext","flight","setFlight","useFromSubmittion","useState","from","to","dateFrom","Date","dateTo","data","setData","useContext","departure","toLocaleDateString","back","handlerSubmit","get","then","resp","catch","console","log","FormApp","formRef","React","useRef","fromCity","setFromCity","toCity","setToCity","form","setForm","useEffect","id","locations","city","label","name","useGetSuggestion","Container","style","marginTop","FlexboxGrid","justify","Form","ref","onChange","layout","formValue","FormGroup","FormControl","accepter","InputPicker","placeholder","labelKey","valueKey","onSearch","value","width","DatePicker","format","Button","color","onClick","PanelApp","cityFrom","cityTo","dTime","aTimeUTC","price","departureTime","arrivalTime","Panel","className","bordered","dayjs","BookingApp","Provider","shaded","map","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdbe09ce.chunk.js","sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nexport const getCitysApi = axios.create({\r\n\r\n     baseURL:'https://api.skypicker.com'\r\n    \r\n});\r\n    \r\nexport const getResultFlights = axios.create({\r\n\r\n     baseURL:'https://api.skypicker.com'\r\n    \r\n});\r\n    \r\n\r\n","import { createContext, useContext } from \"react\";\r\n\r\n\r\nexport type FlightType = {\r\n  flight: any\r\n  setFlight:(f: any) => void\r\n}\r\nexport const FlightsContext = createContext<FlightType>({\r\nflight:\"\", // set a default value\r\nsetFlight: () => {},\r\n})\r\nexport const useFlightContext = () => useContext(FlightsContext);","import { useState } from \"react\";\r\nimport { getResultFlights } from \"../api/getCitysApi\";\r\nimport { useFlightContext } from \"../components/UseContext\";\r\nimport { FormType } from \"../interface/TypeCitySuggestion\";\r\nimport { TypeResultFlights } from \"../interface/TypeResultsFlights\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFromSubmittion = () => {\r\n    const [data, setData] = useState<FormType>({\r\n\r\n        from:\"Barcelona\",\r\n        to:\"Madrid\",\r\n        dateFrom: new Date(),\r\n        dateTo:new Date(),\r\n    \r\n    })    \r\n    const {setFlight} = useFlightContext();\r\n    const { from,to,dateFrom,dateTo } = data;\r\n    const departure = dateFrom?.toLocaleDateString();    \r\n    const back    = dateTo?.toLocaleDateString();\r\n    \r\n\r\n    \r\n\r\n    const handlerSubmit = () => {\r\n        \r\n        getResultFlights.get<TypeResultFlights  >(`/flights?v=3&partner=skypicker&locale=en&flyFrom=${from}&to=${to}&dateFrom=${departure}&dateTo=${departure}&typeFlight=return&returnFrom=${back}&returnTo=${back}&limit=5`)\r\n        .then( resp =>{\r\n            setFlight([...resp.data.data]);\r\n        })\r\n        .catch(console.log); \r\n    }\r\n\r\n\r\n    \r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return {data,setData,handlerSubmit}\r\n\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  DatePicker,\r\n  FlexboxGrid,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  InputPicker,\r\n} from \"rsuite\";\r\nimport { useFromSubmittion } from \"../hooks/useFromSubmittion\";\r\nimport { useGetSuggestion } from \"../hooks/useGetSuggestion\";\r\n\r\nconst FormApp = () => {\r\n  const formRef = React.useRef();\r\n  const { fromCity, toCity, form, setForm } = useGetSuggestion();\r\n  const { data,setData,handlerSubmit } = useFromSubmittion();\r\n\r\n\r\n  return (\r\n\r\n      <Container style={{ marginTop: \"2rem\" }}>\r\n        <FlexboxGrid justify=\"center\">\r\n          <Form \r\n            ref={formRef}\r\n            onChange={setData}\r\n            layout=\"inline\"\r\n            formValue={data}\r\n          >\r\n            <FormGroup>\r\n              <FormControl \r\n                name=\"from\"\r\n                accepter={InputPicker}\r\n                placeholder =\"From\"\r\n                labelKey=\"label\"\r\n                valueKey=\"id\"\r\n                data={fromCity}\r\n                onSearch={(value:string)=>setForm({...form,from:value})}\r\n                style={{ width: 200 }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n            <FormControl\r\n                name=\"to\"\r\n                accepter={InputPicker}\r\n                data={toCity}\r\n                placeholder=\"To\"\r\n                labelKey=\"label\"\r\n                valueKey=\"id\"\r\n                onSearch={(value: string)=>setForm({...form,to:value})}\r\n                style={{ width: 200 }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormControl\r\n                name=\"dateFrom\"\r\n                accepter={DatePicker}\r\n                format={'DD/MM/YYYY'}\r\n                placeholder={'Departure'}\r\n                style={{ width: 200 }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormControl\r\n                name=\"dateTo\"\r\n                accepter={DatePicker}\r\n                format={'DD/MM/YYYY'}\r\n                placeholder={'Return'}\r\n                style={{ width: 200 }}\r\n              />\r\n            </FormGroup>\r\n            <Button color={'green'} onClick={handlerSubmit}>Search</Button>\r\n          </Form>\r\n        </FlexboxGrid>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default FormApp;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getCitysApi } from \"../api/getCitysApi\";\r\nimport {ItemDataType, FormType, TypeCitySuggestion } from \"../interface/TypeCitySuggestion\";\r\n\r\n\r\n\r\nexport const useGetSuggestion = () => {\r\n\r\n    const [fromCity, setFromCity] = useState<ItemDataType[]>([]);\r\n    const [toCity, setToCity] = useState<ItemDataType[]>([]);\r\n    const [form, setForm] = useState<FormType>({\r\n        from:\"Madrid\",\r\n        to:\"Barcelona\",\r\n    })\r\n    const {from,to} = form;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getCitysApi.get<TypeCitySuggestion>(`/locations?term=${from}&location_types=airport`)\r\n                   .then( resp =>{\r\n                    setFromCity([{\r\n                          id:resp.data.locations[0].city.id,\r\n                          label:resp.data.locations[0].city.name \r\n                      }]);\r\n                   })\r\n                   .catch(console.log); \r\n    }, [ from ]);\r\n\r\n    useEffect(() => {\r\n        getCitysApi.get<TypeCitySuggestion>(`/locations?term=${to}&location_types=airport`)\r\n                   .then( resp =>{\r\n                    setToCity([{\r\n                          id:resp.data.locations[0].city.id,\r\n                          label:resp.data.locations[0].city.name \r\n                      }]);\r\n                   })\r\n                   .catch(console.log); \r\n    }, [ to ]);\r\n    \r\n\r\n    return {\r\n       fromCity,\r\n       toCity,\r\n       form, \r\n       setForm,\r\n    };\r\n}\r\n","import { Route } from '../interface/TypeResultsFlights';\r\nimport { Panel } from 'rsuite';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const PanelApp = ({cityFrom,cityTo,dTime,aTimeUTC,price}:Route) => {\r\n\r\n    const departureTime = new Date(dTime * 1000);\r\n    const arrivalTime   = new Date(aTimeUTC * 1000) \r\n\r\n    return (\r\n      <>\r\n        <Panel className=\"result_card\" bordered>\r\n        <dl>\r\n          <dt>From:</dt>\r\n          <dd>{cityFrom}</dd>\r\n          <dt>To:</dt>\r\n          <dd>{cityTo}</dd>\r\n          <dt>Date and Time Departure:</dt>\r\n          <dd>{dayjs(departureTime).format(\"DD/MMMM/YYYY:h:mm:ss A\")}</dd>\r\n          <dt>Date and Time Arrival:</dt>\r\n          <dd>{dayjs(arrivalTime).format(\"DD/MMMM/YYYY:h:mm:ss A\")}</dd>\r\n          <dt>Price:</dt>\r\n          <dd>{price}.00</dd>\r\n        </dl>\r\n      </Panel>\r\n      </>\r\n    )\r\n}\r\n","import FormApp from \"./FormApp\";\r\nimport { useState } from \"react\";\r\nimport { Container, Panel } from \"rsuite\";\r\nimport { FlightsContext } from \"./UseContext\";\r\nimport { Route } from \"../interface/TypeResultsFlights\";\r\nimport { PanelApp } from \"./PanelApp\";\r\nimport \"../css/style.css\";\r\n\r\n\r\n\r\n\r\nconst BookingApp = () => {\r\n  const [flight, setFlight] = useState<Route[]>();\r\n\r\n  return (\r\n    <>\r\n      <FlightsContext.Provider value={{ flight, setFlight }}>\r\n        <Container className=\"show-container\">\r\n          <h2 className=\"title\">Booking your preferred flight</h2>\r\n          <Panel className=\"card\" shaded>\r\n            <FormApp />\r\n          </Panel>\r\n        </Container>\r\n\r\n        <Container>\r\n          {flight?.map((result) => {\r\n            return <PanelApp key={result.id} {...result}/>\r\n          })}\r\n        </Container>\r\n      </FlightsContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookingApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport BookingApp from './components/BookingApp';\r\n\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\nReactDOM.render(\r\n  <BookingApp/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}